{"name": "test_post_users", "status": "broken", "statusDetails": {"message": "ValueError: too many values to unpack (expected 2)", "trace": "MUsers = [<models.user.User object at 0x000001EB239D66D0>, <models.user.User object at 0x000001EB239D6A30>]\n\n    def test_post_users(MUsers):\n        mylogger.info(\"test for post users\")\n        users_data = []\n        for user in MUsers:\n            user_data = user.to_json()\n            users_data.append(user_data)\n        json.dumps(users_data)\n>       res_post = userApi.post_users_list(users_data)\n\npet_test.py:189: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\napi\\user_api.py:21: in post_users_list\n    res = self._session.post(url=f\"{self._url}/createWithList\", data=users)\nC:\\Users\\עדי\\AppData\\Local\\Programs\\Python\\Python39\\lib\\site-packages\\requests\\sessions.py:635: in post\n    return self.request(\"POST\", url, data=data, json=json, **kwargs)\nC:\\Users\\עדי\\AppData\\Local\\Programs\\Python\\Python39\\lib\\site-packages\\requests\\sessions.py:573: in request\n    prep = self.prepare_request(req)\nC:\\Users\\עדי\\AppData\\Local\\Programs\\Python\\Python39\\lib\\site-packages\\requests\\sessions.py:484: in prepare_request\n    p.prepare(\nC:\\Users\\עדי\\AppData\\Local\\Programs\\Python\\Python39\\lib\\site-packages\\requests\\models.py:371: in prepare\n    self.prepare_body(data, files, json)\nC:\\Users\\עדי\\AppData\\Local\\Programs\\Python\\Python39\\lib\\site-packages\\requests\\models.py:559: in prepare_body\n    body = self._encode_params(data)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\ndata = [{'email': 'tal@gmail.com', 'firstName': 'tal', 'id': 12232, 'lastName': 'tal', ...}, {'email': 'dan@gmail.com', 'firstName': 'dan', 'id': 32454, 'lastName': 'dan', ...}]\n\n    @staticmethod\n    def _encode_params(data):\n        \"\"\"Encode parameters in a piece of data.\n    \n        Will successfully encode parameters when passed as a dict or a list of\n        2-tuples. Order is retained if data is a list of 2-tuples but arbitrary\n        if parameters are supplied as a dict.\n        \"\"\"\n    \n        if isinstance(data, (str, bytes)):\n            return data\n        elif hasattr(data, \"read\"):\n            return data\n        elif hasattr(data, \"__iter__\"):\n            result = []\n>           for k, vs in to_key_val_list(data):\nE           ValueError: too many values to unpack (expected 2)\n\nC:\\Users\\עדי\\AppData\\Local\\Programs\\Python\\Python39\\lib\\site-packages\\requests\\models.py:121: ValueError"}, "start": 1659702181529, "stop": 1659702181530, "uuid": "755898a4-6c82-41c8-b047-33e06dfe76e5", "historyId": "eaeda45835d8db97b707aeefa28a4856", "testCaseId": "e4716b643850d39b845f3bb3add53feb", "fullName": "pet_test#test_post_users", "labels": [{"name": "suite", "value": "pet_test"}, {"name": "host", "value": "DESKTOP-6448GON"}, {"name": "thread", "value": "17288-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "pet_test"}]}